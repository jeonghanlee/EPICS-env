
VARS_EXCLUDES+=.SHELLSTATUS

QUIET=@

LEVEL?=2
FILTER?=1
LSOPTS?="-lta"

ifeq "$(FILTER)" "1"
SRC_VARIABLES:=$(sort $(filter-out $(VARS_EXCLUDES) VARS_EXCLUDES,$(.VARIABLES)))
else
SRC_VARIABLES:=$(filter $(FILTER)%, $(sort $(filter-out $(VARS_EXCLUDES) VARS_EXCLUDES,$(.VARIABLES))))
endif

.PHONY : env vars header

env: vars
## Print interesting VARIABLES : also make PRINT.$(EACH_VARIABLE)
vars: _header
	$(foreach v, $(SRC_VARIABLES), $(info $(v) = $($(v)))) @#noop

_header:
	$(QUIET)echo ""
	$(QUIET)echo "------------------------------------------------------------"
	$(QUIET)echo ">>>>          EPICS Envrionment Variables               <<<<"
	$(QUIET)echo "------------------------------------------------------------"
	$(QUIET)echo ""

# https://www.cmcrossroads.com/article/printing-value-makefile-variable
PRINT.%:
	$(QUIET)echo $* = $($*)
	$(QUIET)echo $*\'s origin is $(origin $*)

print-%:
	$(QUIET)echo $* = $($*)
	$(QUIET)echo $*\'s origin is $(origin $*)

ls.%:
	$(QUIET) ls $(LSOPTS) $($*)

tree.%:
	$(QUIET) tree -aL $(LEVEL) $($*)

cat.%:
	$(QUIET) cat -b $($*)

FORCE:


.PHONY : exist

exist:
ifeq (, $(shell which tree))
	$(if $(wildcard $(INSTALL_LOCATION)), @ ls -d $(INSTALL_LOCATION) && find $(INSTALL_LOCATION)/ -maxdepth $(LEVEL) | sed -e "s/[^-][^\/]*\// |/g" -e "s/|\([^ ]\)/:---\1/")
else
	$(if $(wildcard $(INSTALL_LOCATION)), tree -aL $(LEVEL) $(INSTALL_LOCATION), $(QUIET)echo "No $(INSTALL_LOCATION)")
endif


.DELETE_ON_ERROR:

#.NOTPARALLEL:


VARS_EXCLUDES+=FILTER
