.PHONY: conf.modules conf.release.modules conf.modules.zero  conf.module.one

conf.modules: conf.release.modules conf.modules.zero  conf.modules.one

.PHONY: conf.modules.show conf.modules.zero.show conf.modules.one.show

conf.modules.show: conf.modules.zero.show conf.modules.one.show

.PHONY: $(MODS_ZERO_VARS) $(MODS_ONE_VARS) $(MOD_LIBERA_VARS) $(MODS_ZERO_SHOW) $(MODS_ONE_SHOW) $(MOD_LIBERA_SHOW) conf.modules.zero.show conf.modules.one.show

MODS_ZERO_VARS:=conf.iocStats conf.MCoreUtils conf.retools conf.caPutLog conf.recsync conf.autosave conf.sncseq conf.ether_ip conf.sscan conf.snmp conf.opcua conf.pyDevSup conf.pvxs conf.pcas
MODS_ZERO_SHOW:=$(addsuffix .show, $(MODS_ZERO_VARS))

MODS_LIBERA_VARS:=conf.iocStats conf.retools conf.caPutLog conf.recsync conf.autosave conf.sncseq conf.sscan conf.pcas conf.asyn.libera
MODS_LIBERA_SHOW:=$(addsuffix .show, $(MODS_LIBERA_VARS))

MODS_ONE_VARS:=conf.calc conf.asyn conf.modbus conf.lua conf.std conf.StreamDevice conf.busy conf.scaler conf.mca conf.measComp conf.motor conf.motorMotorSim conf.pmac
MODS_ONE_SHOW:=$(addsuffix .show, $(MODS_ONE_VARS))

.PHONY: conf.release.modules conf.release.modules.show update.pvxs

# EPICS_BASE should be the absolute path
conf.release.modules:
	@echo "EPICS_BASE:=$(INSTALL_LOCATION_BASE)"   > $(TOP)/RELEASE.local
	@echo "SUPPORT="                              >> $(TOP)/RELEASE.local
	@echo "CHECK_RELEASE = NO"                     > $(TOP)/CONFIG_SITE.local

conf.release.modules.show:
	cat -b $(TOP)/RELEASE.local
	cat -b $(TOP)/CONFIG_SITE.local


conf.modules.zero.show: $(MODS_ZERO_SHOW)

conf.modules.one.show: $(MODS_ONE_SHOW)

conf.modules.zero: $(MODS_ZERO_VARS)

conf.modules.libera: conf.release.modules $(MODS_LIBERA_VARS)

conf.modules.libera.show: conf.release.modules.show $(MODS_LIBERA_SHOW)

conf.iocStats:
	@echo "MAKE_TEST_IOC_APP=NO"                             > $(TOP)/$(SRC_PATH_IOCSTATS)/configure/RELEASE.local
	@echo "INSTALL_LOCATION:=$(INSTALL_LOCATION_IOCSTATS)"   > $(TOP)/$(SRC_PATH_IOCSTATS)/configure/CONFIG_SITE.local


conf.iocStats.show: conf.release.modules.show
	cat -b $(TOP)/$(SRC_PATH_IOCSTATS)/configure/CONFIG_SITE.local

conf.MCoreUtils:
ifeq ($(UNAME_S),Linux)
	@echo "INSTALL_LOCATION:=$(INSTALL_LOCATION_MCOREUTILS)" > $(TOP)/$(SRC_PATH_MCOREUTILS)/configure/CONFIG_SITE.local
endif

conf.MCoreUtils.show: conf.release.modules.show
ifeq ($(UNAME_S),Linux)
	cat -b $(TOP)/$(SRC_PATH_MCOREUTILS)/configure/CONFIG_SITE.local
endif

conf.retools:
	@echo "INSTALL_LOCATION:=$(INSTALL_LOCATION_RETOOLS)" > $(TOP)/$(SRC_PATH_RETOOLS)/configure/CONFIG_SITE.local
	@echo "USR_CPPFLAGS += -DUSE_TYPED_RSET"             >> $(TOP)/$(SRC_PATH_RETOOLS)/configure/CONFIG_SITE.local

conf.retools.show: conf.release.modules.show
	cat -b $(TOP)/$(SRC_PATH_RETOOLS)/configure/CONFIG_SITE.local

conf.caPutLog:
	@echo "INSTALL_LOCATION:=$(INSTALL_LOCATION_CAPUTLOG)" > $(TOP)/$(SRC_PATH_CAPUTLOG)/configure/CONFIG_SITE.local

conf.caPutLog.show: conf.release.modules.show
	cat -b $(TOP)/$(SRC_PATH_CAPUTLOG)/configure/CONFIG_SITE.local

conf.recsync:
	@echo "INSTALL_LOCATION:=$(INSTALL_LOCATION_RECSYNC)" > $(TOP)/$(SRC_PATH_RECSYNC)/client/configure/CONFIG_SITE.local
	@echo "USR_CPPFLAGS += -DUSE_TYPED_RSET"             >> $(TOP)/$(SRC_PATH_RECSYNC)/client/configure/CONFIG_SITE.local

conf.recsync.show: conf.release.modules.show
	cat -b $(TOP)/$(SRC_PATH_RECSYNC)/client/configure/CONFIG_SITE.local

conf.autosave:
	@echo "INSTALL_LOCATION:=$(INSTALL_LOCATION_AUTOSAVE)" > $(TOP)/$(SRC_PATH_AUTOSAVE)/configure/CONFIG_SITE.local

conf.autosave.show: conf.release.modules.show
	cat -b $(TOP)/$(SRC_PATH_AUTOSAVE)/configure/CONFIG_SITE.local

conf.sncseq:
	@echo "INSTALL_LOCATION:=$(INSTALL_LOCATION_SNCSEQ)"     > $(TOP)/$(SRC_PATH_SNCSEQ)/configure/CONFIG_SITE.local
	@echo "# Nullify RULE_BUILD to call RULES_SNCSEQ in CFG" > $(TOP)/$(SRC_PATH_SNCSEQ)/configure/RULES_BUILD

conf.sncseq.show: conf.release.modules.show
	cat -b $(TOP)/$(SRC_PATH_SNCSEQ)/configure/CONFIG_SITE.local
	cat -b $(TOP)/$(SRC_PATH_SNCSEQ)/configure/RULES_BUILD

conf.ether_ip:
	@echo "INSTALL_LOCATION:=$(INSTALL_LOCATION_ETHERIP)" > $(TOP)/$(SRC_PATH_ETHERIP)/configure/CONFIG_SITE.local

conf.ether_ip.show: conf.release.modules.show
	cat -b $(TOP)/$(SRC_PATH_ETHERIP)/configure/CONFIG_SITE.local


conf.pyDevSup:
	@echo "INSTALL_LOCATION:=$(INSTALL_LOCATION_PYDEVSUP)" > $(TOP)/$(SRC_PATH_PYDEVSUP)/configure/CONFIG_SITE.local
	@python $(TOP)/$(SRC_PATH_PYDEVSUP)/makehelper.py     >> $(TOP)/$(SRC_PATH_PYDEVSUP)/configure/CONFIG_SITE.local

conf.pyDevSup.show: conf.release.modules.show
	@echo "cat -b $(TOP)/$(SRC_PATH_PYDEVSUP)/configure/CONFIG_SITE.local"
	cat -b $(TOP)/$(SRC_PATH_PYDEVSUP)/configure/CONFIG_SITE.local


conf.pcas:
	@echo "INSTALL_LOCATION:=$(INSTALL_LOCATION_PCAS)" > $(TOP)/$(SRC_PATH_PCAS)/configure/CONFIG_SITE.local

conf.pcas.show: conf.release.modules.show
	cat -b $(TOP)/$(SRC_PATH_PCAS)/configure/CONFIG_SITE.local


build.libevent:
	@make -C $(SRC_PATH_PVXS)/bundle libevent

conf.pvxs: preconf.pvxs gitinit.pvxs

preconf.pvxs:
	@echo "INSTALL_LOCATION:=$(INSTALL_LOCATION_PVXS)"  > $(TOP)/$(SRC_PATH_PVXS)/configure/CONFIG_SITE.local
	@echo "CHECK_RELEASE = NO"                         >> $(TOP)/$(SRC_PATH_PVXS)/configure/CONFIG_SITE.local
	@echo "-include \$$(INSTALL_LOCATION)/cfg/CONFIG_PVXS_MODULE"    >> $(TOP)/$(SRC_PATH_PVXS)/configure/CONFIG_SITE.local
	@echo "-include \$$(INSTALL_LOCATION)/cfg/CONFIG_PVXS_VERSION"   >> $(TOP)/$(SRC_PATH_PVXS)/configure/CONFIG_SITE.local

conf.pvxs.show: conf.release.modules.show
	@echo "cat -b $(TOP)/$(SRC_PATH_PVXS)/configure/CONFIG_SITE.local"
	cat -b $(TOP)/$(SRC_PATH_PVXS)/configure/CONFIG_SITE.local

gitinit.pvxs:
	@cd $(SRC_PATH_PVXS) && git submodule update --init ./


#### ORDER....
### calc
### asyn
### modbus


conf.modules.one: $(MODS_ONE_VARS) 

conf.sscan:
	@echo "SNCSEQ=$(INSTALL_LOCATION_SNCSEQ)"           > $(TOP)/$(SRC_PATH_SSCAN)/configure/RELEASE.local
	@echo "INSTALL_LOCATION:=$(INSTALL_LOCATION_SSCAN)" > $(TOP)/$(SRC_PATH_SSCAN)/configure/CONFIG_SITE.local

conf.sscan.show: conf.release.modules.show
	cat -b $(TOP)/$(SRC_PATH_SSCAN)/configure/RELEASE.local
	cat -b $(TOP)/$(SRC_PATH_SSCAN)/configure/CONFIG_SITE.local

# seq, sscan
conf.calc:
	@echo "SNCSEQ=$(INSTALL_LOCATION_SNCSEQ)"          > $(TOP)/$(SRC_PATH_CALC)/configure/RELEASE.local
	@echo "SSCAN=$(INSTALL_LOCATION_SSCAN)"           >> $(TOP)/$(SRC_PATH_CALC)/configure/RELEASE.local
	@echo "INSTALL_LOCATION:=$(INSTALL_LOCATION_CALC)" > $(TOP)/$(SRC_PATH_CALC)/configure/CONFIG_SITE.local
	@echo "CHECK_RELEASE = NO"                        >> $(TOP)/$(SRC_PATH_CALC)/configure/CONFIG_SITE.local
	@sed -i~ -e "s/PROD_LIBS += calc.*/PROD_LIBS += calc sscan seq/g" $(SRC_PATH_CALC)/tests/Makefile

conf.calc.show: conf.release.modules.show
	cat -b $(TOP)/$(SRC_PATH_CALC)/configure/RELEASE.local
	cat -b $(TOP)/$(SRC_PATH_CALC)/configure/CONFIG_SITE.local

# seq, sscan, calc
conf.asyn:
	@echo "SNCSEQ=$(INSTALL_LOCATION_SNCSEQ)"          > $(TOP)/$(SRC_PATH_ASYN)/configure/RELEASE.local
	@echo "SSCAN=$(INSTALL_LOCATION_SSCAN)"           >> $(TOP)/$(SRC_PATH_ASYN)/configure/RELEASE.local
	@echo "CALC=$(INSTALL_LOCATION_CALC)"             >> $(TOP)/$(SRC_PATH_ASYN)/configure/RELEASE.local
	@echo "INSTALL_LOCATION:=$(INSTALL_LOCATION_ASYN)" > $(TOP)/$(SRC_PATH_ASYN)/configure/CONFIG_SITE.local
	@echo "LINUX_GPIB=NO"                             >> $(TOP)/$(SRC_PATH_ASYN)/configure/CONFIG_SITE.local
	@echo "DRV_USBTMC=NO"                             >> $(TOP)/$(SRC_PATH_ASYN)/configure/CONFIG_SITE.local
ifeq ($(UNAME_S),Linux)
	@echo "TIRPC=YES"                                 >> $(TOP)/$(SRC_PATH_ASYN)/configure/CONFIG_SITE.local
endif
ifeq ($(UNAME_S),Darwin)
	@echo "TIRPC=NO"                                  >> $(TOP)/$(SRC_PATH_ASYN)/configure/CONFIG_SITE.local
endif

conf.asyn.libera:
	@echo "SNCSEQ=$(INSTALL_LOCATION_SNCSEQ)"          > $(TOP)/$(SRC_PATH_ASYN)/configure/RELEASE.local
	@echo "SSCAN=$(INSTALL_LOCATION_SSCAN)"           >> $(TOP)/$(SRC_PATH_ASYN)/configure/RELEASE.local
	@echo "CALC=$(INSTALL_LOCATION_CALC)"             >> $(TOP)/$(SRC_PATH_ASYN)/configure/RELEASE.local
	@echo "INSTALL_LOCATION:=$(INSTALL_LOCATION_ASYN)" > $(TOP)/$(SRC_PATH_ASYN)/configure/CONFIG_SITE.local
	@echo "LINUX_GPIB=NO"                             >> $(TOP)/$(SRC_PATH_ASYN)/configure/CONFIG_SITE.local
	@echo "DRV_USBTMC=NO"                             >> $(TOP)/$(SRC_PATH_ASYN)/configure/CONFIG_SITE.local
	@echo "TIRPC=NO"                                  >> $(TOP)/$(SRC_PATH_ASYN)/configure/CONFIG_SITE.local

conf.asyn.show: conf.release.modules.show
	cat -b $(TOP)/$(SRC_PATH_ASYN)/configure/RELEASE.local
	cat -b $(TOP)/$(SRC_PATH_ASYN)/configure/CONFIG_SITE.local

conf.asyn.libera.show: conf.asyn.show

# asyn
conf.modbus:
	@echo "ASYN=$(INSTALL_LOCATION_ASYN)"                > $(TOP)/$(SRC_PATH_MODBUS)/configure/RELEASE.local
	@echo "INSTALL_LOCATION:=$(INSTALL_LOCATION_MODBUS)" > $(TOP)/$(SRC_PATH_MODBUS)/configure/CONFIG_SITE.local

conf.modbus.show: conf.release.modules.show
	cat -b $(TOP)/$(SRC_PATH_MODBUS)/configure/RELEASE.local
	cat -b $(TOP)/$(SRC_PATH_MODBUS)/configure/CONFIG_SITE.local

# asynMODS_ONE_VARS:=conf.calc conf.asyn conf.modbus conf.lua conf.std conf.StreamDevice conf.busy conf.scaler conf.mca
conf.lua:
	@echo "ASYN=$(INSTALL_LOCATION_ASYN)"              > $(TOP)/$(SRC_PATH_LUA)/configure/RELEASE.local
	@echo "INSTALL_LOCATION:=$(INSTALL_LOCATION_LUA)"  > $(TOP)/$(SRC_PATH_LUA)/configure/CONFIG_SITE.local
	@echo "CHECK_RELEASE = NO"                        >> $(TOP)/$(SRC_PATH_LUA)/configure/CONFIG_SITE.local
	@sed -i -e "/^CHECK_RELEASE/d" $(TOP)/$(SRC_PATH_LUA)/configure/Makefile 

conf.lua.show: conf.release.modules.show
	cat -b $(TOP)/$(SRC_PATH_LUA)/configure/RELEASE.local
	cat -b $(TOP)/$(SRC_PATH_LUA)/configure/CONFIG_SITE.local

# asyn
conf.std:
	@echo "SNCSEQ=$(INSTALL_LOCATION_SNCSEQ)"            > $(TOP)/$(SRC_PATH_STD)/configure/RELEASE.local
	@echo "ASYN=$(INSTALL_LOCATION_ASYN)"               >> $(TOP)/$(SRC_PATH_STD)/configure/RELEASE.local
	@echo "INSTALL_LOCATION:=$(INSTALL_LOCATION_STD)"    > $(TOP)/$(SRC_PATH_STD)/configure/CONFIG_SITE.local

conf.std.show: conf.release.modules.show
	cat -b $(TOP)/$(SRC_PATH_STD)/configure/RELEASE.local
	cat -b $(TOP)/$(SRC_PATH_STD)/configure/CONFIG_SITE.local

## StreamDevice doesn't follow the latest EPICS building rule
## so, we need to hack a lot to install them into .....
## asyn, calc, pcre (not yet)
conf.StreamDevice:
	@-rm -f $(SRC_PATH_STREAM)/GNUmakefile
	@echo "ASYN=$(INSTALL_LOCATION_ASYN)"                     > $(TOP)/$(SRC_PATH_STREAM)/configure/RELEASE.local
	@echo "CALC=$(INSTALL_LOCATION_CALC)"                    >> $(TOP)/$(SRC_PATH_STREAM)/configure/RELEASE.local
	@echo "PCRE="                                            >> $(TOP)/$(SRC_PATH_STREAM)/configure/RELEASE.local
	@echo "INSTALL_LOCATION:=$(INSTALL_LOCATION_STREAM)"      > $(TOP)/$(SRC_PATH_STREAM)/configure/CONFIG_SITE.local
	@echo "CHECK_RELEASE = NO"                               >> $(TOP)/$(SRC_PATH_STREAM)/configure/CONFIG_SITE.local
	@sed -i -e "/^CHECK_RELEASE/d"  $(TOP)/$(SRC_PATH_STREAM)/configure/Makefile

conf.StreamDevice.show: conf.release.modules.show
	cat -b $(TOP)/$(SRC_PATH_STREAM)/configure/RELEASE.local
#	@grep -r $(INSTALL_LOCATION_STREAM) $(TOP)/$(SRC_PATH_STREAM)/configure/CONFIG_APP
	cat -b $(TOP)/$(SRC_PATH_STREAM)/configure/CONFIG_SITE.local

# 
conf.snmp:
	@echo "INSTALL_LOCATION:=$(INSTALL_LOCATION_SNMP)"  > $(TOP)/$(SRC_PATH_SNMP)/configure/CONFIG_SITE.local

conf.snmp.show: conf.release.modules.show
	cat -b $(TOP)/$(SRC_PATH_SNMP)/configure/CONFIG_SITE.local
	
conf.opcua:
	@echo "INSTALL_LOCATION:=$(INSTALL_LOCATION_OPCUA)"  > $(TOP)/$(SRC_PATH_OPCUA)/configure/CONFIG_SITE.local
	@echo "UASDK = ${HOME}/OPCUA_SDK/1.7.2"             >> $(TOP)/$(SRC_PATH_OPCUA)/configure/CONFIG_SITE.local
#	@echo "UASDK_DEPLOY_MODE = INSTALL"                 >> $(TOP)/$(SRC_PATH_OPCUA)/configure/CONFIG_SITE.local

conf.opcua.show: conf.release.modules.show
	cat -b $(TOP)/$(SRC_PATH_OPCUA)/configure/CONFIG_SITE.local
#

# 
conf.busy:
	@echo "INSTALL_LOCATION:=$(INSTALL_LOCATION_BUSY)"  > $(TOP)/$(SRC_PATH_BUSY)/configure/CONFIG_SITE.local
	@echo "ASYN=$(INSTALL_LOCATION_ASYN)"               > $(TOP)/$(SRC_PATH_BUSY)/configure/RELEASE.local
	@echo "AUTOSAVE=$(INSTALL_LOCATION_AUTOSAVE)"      >> $(TOP)/$(SRC_PATH_BUSY)/configure/RELEASE.local

conf.busy.show: conf.release.modules.show
	cat -b $(TOP)/$(SRC_PATH_BUSY)/configure/CONFIG_SITE.local
	cat -b $(TOP)/$(SRC_PATH_BUSY)/configure/RELEASE.local

conf.scaler:
	@echo "INSTALL_LOCATION:=$(INSTALL_LOCATION_SCALER)"  > $(TOP)/$(SRC_PATH_SCALER)/configure/CONFIG_SITE.local
	@echo "ASYN=$(INSTALL_LOCATION_ASYN)"               > $(TOP)/$(SRC_PATH_SCALER)/configure/RELEASE.local
	@echo "AUTOSAVE=$(INSTALL_LOCATION_AUTOSAVE)"      >> $(TOP)/$(SRC_PATH_SCALER)/configure/RELEASE.local

conf.scaler.show: conf.release.modules.show
	cat -b $(TOP)/$(SRC_PATH_SCALER)/configure/CONFIG_SITE.local
	cat -b $(TOP)/$(SRC_PATH_SCALER)/configure/RELEASE.local

conf.mca:
	@echo "INSTALL_LOCATION:=$(INSTALL_LOCATION_MCA)"    > $(TOP)/$(SRC_PATH_MCA)/configure/CONFIG_SITE.local
ifeq ($(UNAME_S),Darwin)
	@echo "DARWIN_NET_INSTALLED = NO"                   >> $(TOP)/$(SRC_PATH_MCA)/configure/CONFIG_SITE.local
endif
ifeq ($(UNAME_S),Linux)
	@echo "LINUX_LIBUSB-1.0_INSTALLED = NO"             >> $(TOP)/$(SRC_PATH_MCA)/configure/CONFIG_SITE.local
	@echo "LINUX_NET_INSTALLED = NO"                    >> $(TOP)/$(SRC_PATH_MCA)/configure/CONFIG_SITE.local
endif
	@echo "SNCSEQ=$(INSTALL_LOCATION_SNCSEQ)"           > $(TOP)/$(SRC_PATH_MCA)/configure/RELEASE.local
	@echo "SSCAN=$(INSTALL_LOCATION_SSCAN)"            >> $(TOP)/$(SRC_PATH_MCA)/configure/RELEASE.local
	@echo "CALC=$(INSTALL_LOCATION_CALC)"              >> $(TOP)/$(SRC_PATH_MCA)/configure/RELEASE.local
	@echo "ASYN=$(INSTALL_LOCATION_ASYN)"              >> $(TOP)/$(SRC_PATH_MCA)/configure/RELEASE.local
	@echo "AUTOSAVE=$(INSTALL_LOCATION_AUTOSAVE)"      >> $(TOP)/$(SRC_PATH_MCA)/configure/RELEASE.local
	@echo "BUSY=$(INSTALL_LOCATION_BUSY)"              >> $(TOP)/$(SRC_PATH_MCA)/configure/RELEASE.local
	@echo "SCALER=$(INSTALL_LOCATION_SCALER)"          >> $(TOP)/$(SRC_PATH_MCA)/configure/RELEASE.local
	@echo "STD=$(INSTALL_LOCATION_STD)"                >> $(TOP)/$(SRC_PATH_MCA)/configure/RELEASE.local
	


conf.mca.show: conf.release.modules.show
	cat -b $(TOP)/$(SRC_PATH_MCA)/configure/CONFIG_SITE.local
	cat -b $(TOP)/$(SRC_PATH_MCA)/configure/RELEASE.local

#ULDAQ_DIR=/home/epics/local/lib
#ULDAQ_INCLUDE=/home/epics/local/include

conf.measComp:
	@echo "INSTALL_LOCATION:=$(INSTALL_LOCATION_MEASCOMP)" > $(TOP)/$(SRC_PATH_MEASCOMP)/configure/CONFIG_SITE.local
	@echo "HAVE_ULDAQ=YES"                                >> $(TOP)/$(SRC_PATH_MEASCOMP)/configure/CONFIG_SITE.local
	@echo "ULDAQ_DIR:=/usr/local/lib/"                    >> $(TOP)/$(SRC_PATH_MEASCOMP)/configure/CONFIG_SITE.local
	@echo "ULDAQ_INCLUDE:=/usr/local/include/"            >> $(TOP)/$(SRC_PATH_MEASCOMP)/configure/CONFIG_SITE.local
ifeq ($(UNAME_S),Linux)
	@echo "LINUX_LIBUSB-1.0_INSTALLED = NO"             >> $(TOP)/$(SRC_PATH_MEASCOMP)/configure/CONFIG_SITE.local
	@echo "LINUX_NET_INSTALLED = NO"                    >> $(TOP)/$(SRC_PATH_MEASCOMP)/configure/CONFIG_SITE.local
endif   
	@echo "SNCSEQ=$(INSTALL_LOCATION_SNCSEQ)"           > $(TOP)/$(SRC_PATH_MEASCOMP)/configure/RELEASE.local
	@echo "SSCAN=$(INSTALL_LOCATION_SSCAN)"            >> $(TOP)/$(SRC_PATH_MEASCOMP)/configure/RELEASE.local
	@echo "CALC=$(INSTALL_LOCATION_CALC)"              >> $(TOP)/$(SRC_PATH_MEASCOMP)/configure/RELEASE.local
	@echo "ASYN=$(INSTALL_LOCATION_ASYN)"              >> $(TOP)/$(SRC_PATH_MEASCOMP)/configure/RELEASE.local
	@echo "AUTOSAVE=$(INSTALL_LOCATION_AUTOSAVE)"      >> $(TOP)/$(SRC_PATH_MEASCOMP)/configure/RELEASE.local
	@echo "BUSY=$(INSTALL_LOCATION_BUSY)"              >> $(TOP)/$(SRC_PATH_MEASCOMP)/configure/RELEASE.local
	@echo "SCALER=$(INSTALL_LOCATION_SCALER)"          >> $(TOP)/$(SRC_PATH_MEASCOMP)/configure/RELEASE.local
	@echo "STD=$(INSTALL_LOCATION_STD)"                >> $(TOP)/$(SRC_PATH_MEASCOMP)/configure/RELEASE.local
	@echo "MCA=$(INSTALL_LOCATION_MCA)"                >> $(TOP)/$(SRC_PATH_MEASCOMP)/configure/RELEASE.local
	
conf.measComp.show: conf.release.modules.show
	cat -b $(TOP)/$(SRC_PATH_MEASCOMP)/configure/CONFIG_SITE.local
	cat -b $(TOP)/$(SRC_PATH_MEASCOMP)/configure/RELEASE.local

conf.motor:
	@echo "INSTALL_LOCATION:=$(INSTALL_LOCATION_MOTOR)"    > $(TOP)/$(SRC_PATH_MOTOR)/configure/CONFIG_SITE.local
	@echo "CHECK_RELEASE = NO"                            >> $(TOP)/$(SRC_PATH_MOTOR)/configure/CONFIG_SITE.local
	@echo "SNCSEQ=$(INSTALL_LOCATION_SNCSEQ)"              > $(TOP)/$(SRC_PATH_MOTOR)/configure/RELEASE.local
	@echo "ASYN=$(INSTALL_LOCATION_ASYN)"                 >> $(TOP)/$(SRC_PATH_MOTOR)/configure/RELEASE.local
	@echo "BUSY=$(INSTALL_LOCATION_BUSY)"                 >> $(TOP)/$(SRC_PATH_MOTOR)/configure/RELEASE.local
	@echo "LUA=$(INSTALL_LOCATION_LUA)"                   >> $(TOP)/$(SRC_PATH_MOTOR)/configure/RELEASE.local
	@echo "MODBUS=$(INSTALL_LOCATION_MODBUS)"             >> $(TOP)/$(SRC_PATH_MOTOR)/configure/RELEASE.local

conf.motor.show: conf.release.modules.show
	cat -b $(TOP)/$(SRC_PATH_MOTOR)/configure/CONFIG_SITE.local
	cat -b $(TOP)/$(SRC_PATH_MOTOR)/configure/RELEASE.local

conf.motorMotorSim:
	@echo "INSTALL_LOCATION:=$(INSTALL_LOCATION_MOTORSIM)"  > $(TOP)/$(SRC_PATH_MOTORSIM)/configure/CONFIG_SITE
	@echo "CHECK_RELEASE = NO"                            >> $(TOP)/$(SRC_PATH_MOTORSIM)/configure/CONFIG_SITE
	@echo "MOTOR=$(INSTALL_LOCATION_MOTOR)"                > $(TOP)/$(SRC_PATH_MOTORSIM)/configure/RELEASE
	@echo "EPICS_BASE:=$(INSTALL_LOCATION_BASE)"          >> $(TOP)/$(SRC_PATH_MOTORSIM)/configure/RELEASE
	@echo "SUPPORT="                                      >> $(TOP)/$(SRC_PATH_MOTORSIM)/configure/RELEASE
	@echo "ASYN=$(INSTALL_LOCATION_ASYN)"                 >> $(TOP)/$(SRC_PATH_MOTORSIM)/configure/RELEASE

conf.motorMotorSim.show: conf.release.modules.show
	cat -b $(TOP)/$(SRC_PATH_MOTORSIM)/configure/CONFIG_SITE
	cat -b $(TOP)/$(SRC_PATH_MOTORSIM)/configure/RELEASE


# Somehow, pkg-config libssh2 --libs does not return its -L (libpath),
# So we need to find a hack to switch two different paths among Redhat variants and Debian based one.
# For the static link of powerPmacAsynPortSrc
# We don't need to define SSH_INCLUDE, since it is in the default folder
conf.pmac:
	@-rm -f $(TOP)/$(SRC_PATH_PMAC)/configure/CONFIG_SITE.linux-x86_64.Common
	@echo "INSTALL_LOCATION:=$(INSTALL_LOCATION_PMAC)"  > $(TOP)/$(SRC_PATH_PMAC)/configure/CONFIG_SITE
	@echo "CHECK_RELEASE = NO"                         >> $(TOP)/$(SRC_PATH_PMAC)/configure/CONFIG_SITE
	@echo "BUILD_IOCS = NO"                            >> $(TOP)/$(SRC_PATH_PMAC)/configure/CONFIG_SITE
	@echo "USE_GRAPHICSMAGICK = NO"                    >> $(TOP)/$(SRC_PATH_PMAC)/configure/CONFIG_SITE
	@echo "SSH = YES"                                  >> $(TOP)/$(SRC_PATH_PMAC)/configure/CONFIG_SITE
ifneq ($(wildcard /usr/lib/x86_64-linux-gnu/.*),)
	@echo "SSH_LIB = /usr/lib/x86_64-linux-gnu"        >> $(TOP)/$(SRC_PATH_PMAC)/configure/CONFIG_SITE
else
	@echo "SSH_LIB = /usr/lib64"                       >> $(TOP)/$(SRC_PATH_PMAC)/configure/CONFIG_SITE
endif
	@echo "SSH_INCLUDE ="                              >> $(TOP)/$(SRC_PATH_PMAC)/configure/CONFIG_SITE
	@echo "WITH_BOOST = NO"                            >> $(TOP)/$(SRC_PATH_PMAC)/configure/CONFIG_SITE
	@echo "USR_LDFLAGS  += -lssh2 -lssl -ldl -pthread -lcrypto -ldl -pthread -lz" >> $(TOP)/$(SRC_PATH_PMAC)/configure/CONFIG_SITE
	@echo "PROD_LDFLAGS += -lssh2 -lssl -ldl -pthread -lcrypto -ldl -pthread -lz" >> $(TOP)/$(SRC_PATH_PMAC)/configure/CONFIG_SITE
	@-rm -f $(TOP)/$(SRC_PATH_PMAC)/configure/RELEASE.local.linux-x86_64
	@-rm -f $(TOP)/$(SRC_PATH_PMAC)/configure/RELEASE.linux-x86_64.Common
	@echo "ASYN=$(INSTALL_LOCATION_ASYN)"               > $(TOP)/$(SRC_PATH_PMAC)/configure/RELEASE.local
	@echo "BUSY=$(INSTALL_LOCATION_BUSY)"              >> $(TOP)/$(SRC_PATH_PMAC)/configure/RELEASE.local
	@echo "CALC=$(INSTALL_LOCATION_CALC)"              >> $(TOP)/$(SRC_PATH_PMAC)/configure/RELEASE.local
	@echo "MOTOR=$(INSTALL_LOCATION_MOTOR)"            >> $(TOP)/$(SRC_PATH_PMAC)/configure/RELEASE.local
	@echo "EPICS_BASE:=$(INSTALL_LOCATION_BASE)"       >> $(TOP)/$(SRC_PATH_PMAC)/configure/RELEASE.local
	
conf.pmac.show: conf.release.modules.show
	cat -b $(TOP)/$(SRC_PATH_PMAC)/configure/CONFIG_SITE
	cat -b $(TOP)/$(SRC_PATH_PMAC)/configure/RELEASE.local
