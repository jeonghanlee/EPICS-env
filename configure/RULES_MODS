.PHONY: init.modules clone.modules $(MOD_NAMES_VARS) 

init.modules: reconf.modules clone.modules

.PHONY: reconf.modules remove.gen.mk

reconf.modules: remove.gen.mk 
	@make null

## we have to remove it always to make sure all generated .MODULEGEN.mk is up-to-date
remove.gen.mk: FORCE
	-rm -f $(TOP)/configure/*.mk

.PHONY: clone.modules $(MOD_NAMES_VARS)

clone.modules: $(MOD_NAMES_VARS)

$(MOD_NAMES_VARS):
	$(call gitclone,$(SRC_GITURL_$(@)),$(SRC_PATH_$(@)),$(SRC_TAG_$(@)))


.PHONY: build.modules install.modules clean.modules distclean.modules


## we cannot use make -C modulename build because of sequencer building system
## Typically, epics building system is "build" is the same as "no rule".
## However, sequencer has the following error if we specifically call "build" rule
## ../snl.re:16:10: fatal error: snl.h: No such file or directory
## #include "snl.h"
##          ^~~~~~~


define a_rule_BUILDER
$(2).$(patsubst %-src,%, $(patsubst %/client, %, $(1))): $(1)
	@make -C $$^ $(2)

$(3)+=$(2).$(patsubst %-src,%, $(patsubst %/client, %, $(1)))

endef

define rules_BUILDER
$(foreach dir, $(1), $(eval $(call a_rule_BUILDER,$(dir),$(2),$(3))))
endef

CLEAN_RULES:=
INSTALL_RULES:=
UNINSTALL_RULES:=
BUILD_RULES:=

$(call rules_BUILDER,$(SRC_PATH_MODULES),distclean,CLEAN_RULES)
$(call rules_BUILDER,$(SRC_PATH_MODULES),install,INSTALL_RULES)
$(call rules_BUILDER,$(SRC_PATH_MODULES),uninstall,UNINSTALL_RULES)
$(call rules_BUILDER,$(SRC_PATH_MODULES),build,BUILD_RULES)


build.modules: $(BUILD_RULES)

## This rule is actually `make distclean` instead of `clean
clean.modules: $(CLEAN_RULES)

install.modules: $(INSTALL_RULES)

uninstall.modules: $(UNINSTALL_RULES)



FORCE:

VARS_EXCLUDES+=a_rule_BUILDER
VARS_EXCLUDES+=rules_BUILDER
