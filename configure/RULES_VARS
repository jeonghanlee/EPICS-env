VARS_EXCLUDES+=.SHELLSTATUS
VARS_EXCLUDES+=INIT_SRC
VARS_EXCLUDES+=SITE_SPECIFIC_FILES_PATH

LEVEL?=2

MOD_LEVEL=$(shell expr $(LEVEL) + 1)

FILTER?=1

ifeq "$(FILTER)" "1"
SRC_VARIABLES:=$(sort $(filter-out $(VARS_EXCLUDES) VARS_EXCLUDES,$(.VARIABLES)))
else
SRC_VARIABLES:=$(filter $(FILTER)%, $(sort $(filter-out $(VARS_EXCLUDES) VARS_EXCLUDES,$(.VARIABLES))))
endif


.PHONY : env vars header

env: vars
## Print interesting VARIABLES : also make PRINT.$(EACH_VARIABLE)
vars: _header
	$(foreach v, $(SRC_VARIABLES), $(info $(v) = $($(v)))) @#noop

_header:
	$(QUIET)echo ""
	$(QUIET)echo "------------------------------------------------------------"
	$(QUIET)echo ">>>>          Current Envrionment Variables             <<<<"
	$(QUIET)echo "------------------------------------------------------------"
	$(QUIET)echo ""

# https://www.cmcrossroads.com/article/printing-value-makefile-variable
PRINT.%:
	$(QUIET)echo $* = $($*)
	$(QUIET)echo $*\'s origin is $(origin $*)

print-%:
	$(QUIET)echo $* = $($*)
	$(QUIET)echo $*\'s origin is $(origin $*)

FORCE:


.PHONY : exist

exist:
ifeq (, $(shell which tree))
	$(if $(wildcard $(INSTALL_LOCATION_EPICS)), @ ls -d $(INSTALL_LOCATION_EPICS) && find $(INSTALL_LOCATION_EPICS)/ -maxdepth $(LEVEL) | sed -e "s/[^-][^\/]*\// |/g" -e "s/|\([^ ]\)/:---\1/")
else
	$(if $(wildcard $(INSTALL_LOCATION_EPICS)), tree -aL $(LEVEL) $(INSTALL_LOCATION_EPICS), $(QUIET)echo "No $(INSTALL_LOCATION_EPICS)")
endif

exist.modules:
ifeq (, $(shell which tree))
	$(if $(wildcard $(INSTALL_LOCATION_MODS)), @ ls -d $(INSTALL_LOCATION_MODS) && find $(INSTALL_LOCATION_MODS)/ -maxdepth $(MOD_LEVEL) | sed -e "s/[^-][^\/]*\// |/g" -e "s/|\([^ ]\)/:---\1/")
else
	$(if $(wildcard $(INSTALL_LOCATION_MODS)), tree -aL $(MOD_LEVEL) $(INSTALL_LOCATION_MODS), $(QUIET)echo "No $(INSTALL_LOCATION_MODS)")
endif


.DELETE_ON_ERROR:

.NOTPARALLEL:


VARS_EXCLUDES+=FILTER
